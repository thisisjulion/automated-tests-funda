plugins {
    id "java"
    id "io.freefair.lombok" version "${lombokPluginVersion}"
    id "org.gradle.test-retry" version "${gradleTestRetryVersion}"
    id "io.qameta.allure" version "${allurePluginVersion}"
}

group = 'com.funda'
version = '1.0-SNAPSHOT'

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    implementation "net.datafaker:datafaker:${datafakerVersion}"
    implementation "com.microsoft.playwright:playwright:${playwrightVersion}"

    // Test Dependencies:
    testImplementation enforcedPlatform("org.junit:junit-bom:${junitVersion}")
    testImplementation enforcedPlatform("io.qameta.allure:allure-bom:${allureVersion}")

    // -- Test - Base
    testImplementation "io.qameta.allure:allure-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.platform:junit-platform-suite-api"
    testImplementation 'io.qameta.allure:allure-playwright'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.junit.platform:junit-platform-suite-engine"
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

compileTestJava {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform {
        if (System.getProperty('includeTags')) {
            includeTags System.getProperty('includeTags').split(',')
        }

        if (System.getProperty('excludeTags')) {
            excludeTags System.getProperty('excludeTags').split(',')
        }
    }

    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}

tasks.withType(Test) {
    retry {
        maxRetries = 2
        failOnPassedAfterRetry = false
    }
}

allure {
    report {
        dependsOnTests.set(false)
    }
}